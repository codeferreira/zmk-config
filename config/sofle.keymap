#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE   &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                                     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &none
&kp ESC     &kp Q   &kp W     &kp E     &kp R      &kp T                                      &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSPC
&kp TAB     &kp A   &kp S     &kp D     &kp F      &kp G                                      &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp RSHIFT  &kp Z   &kp X     &kp C     &kp V      &kp B      &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHIFT
                    &kp LGUI  &kp LALT  &kp LCTRL  &mo LOWER  &kp RET       &kp SPACE         &mo RAISE  &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |       |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |       |
            // |       |  -  |  _  |  [   |  {   |  \   |        |  |       |  |   |  }    |  ]    |  =   |   +   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1     &kp F2     &kp F3    &kp F4    &kp F5                               &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5                               &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
&trans  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT                            &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &trans
&trans  &kp MINUS  &kp UNDER  &kp LBKT  &kp LBRC  &kp BSLH           &trans    &trans  &kp PIPE   &kp RBRC  &kp RBKT   &kp EQUAL  &kp PLUS  &trans
                   &trans     &trans    &trans    &ext_power EP_TOG  &trans    &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &trans             &trans          &trans         &trans     &trans   &trans
&trans         &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                               &trans             &trans          &trans         &trans     &kp N0   &trans
&trans         &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                             &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT  &kp DEL  &kp BSPC
&kp LG(LS(Z))  &kp LG(Z)     &kp LG(X)     &kp LG(C)     &kp LG(V)     &kp LG(BACKSLASH)  &trans    &trans  &kp LA(LC(ENTER))  &kp LG(SPACE)   &kp LS(LG(C))  &trans     &trans   &kp C_AL_LOCK
                             &trans        &trans        &trans        &trans             &trans    &trans  &trans             &trans          &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        yabai_layer {
            bindings = <
&trans  &kp LA(LS(NUMBER_1))  &kp LA(LS(NUMBER_2))  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(NUMBER_5))                    &kp LA(LS(NUMBER_6))  &kp LA(LS(NUMBER_7))  &kp LA(LS(NUMBER_8))  &kp LA(LS(NUMBER_9))  &kp LA(LS(NUMBER_0))  &trans
&trans  &kp LC(NUMBER_1)      &kp LC(NUMBER_2)      &kp LC(NUMBER_3)      &kp LC(NUMBER_4)      &kp LC(NUMBER_5)                        &kp LC(NUMBER_6)      &kp LC(NUMBER_7)      &kp LC(NUMBER_8)      &kp LC(NUMBER_9)      &kp LC(NUMBER_0)      &trans
&trans  &kp LS(LA(H))         &kp LA(LS(J))         &kp LA(LS(K))         &kp LA(LS(L))         &trans                                  &mt LA(LC(H)) LA(H)   &mt LA(LC(J)) LA(J)   &mt LA(LC(K)) LA(K)   &mt LA(LC(L)) LA(L)   &trans                &trans
&trans  &kp LA(E)             &trans                &kp LA(LS(S))         &kp LA(LS(G))         &mt LA(LS(S)) LA(S)   &trans    &trans  &mt LA(LS(G)) LA(G)   &kp LA(LS(M))         &kp LA(X)             &trans                &trans                &trans
                              &trans                &trans                &trans                &trans                &trans    &trans  &trans                &trans                &trans                &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        yabai {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
